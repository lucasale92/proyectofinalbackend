paths:
  /api/products:
    get:
      summary: Obtiene todos los productos
      tags:
        - Products
      responses:
        200:
          description: Los productos fueron devueltos satisfactoriamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado de la solicitud
                  msg:
                    type: string
                    description: Mensaje descriptivo
                  payload:
                    type: object
                    properties:
                      docs:
                        type: array
                items:
                  $ref: '#components/schemas/Products'
                totalDocs:
                        type: integer
                      limit:
                        type: integer
                      totalPages:
                        type: integer
                      page:
                        type: integer
                      pagingCounter:
                        type: integer
                      hasPrevPage:
                        type: boolean
                      hasNextPage:
                        type: boolean
                      prevPage:
                        type: integer
                      nextPage:
                        type: integer
                      prevLink:
                        type: string
                      nextLink:
                        type: string  
        500:
          description: Error del servidor. Usualmente generando la query o falla la conexion a la DB

    post:
      summary: Agregar un producto
      tags:
        - Products
      description: Crea un nuevo producto.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateProduct'
      responses:
        200:
          description: El producto se creó correctamente.
        400:
          description: Se produjo un error en la solicitud.

  /api/products/{uid}:
    get:
      summary: Obtiene un producto
      tags:
        - Products
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del producto que se busca
          schema:
            $type: String
      responses:
        200:
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Products'
    put:
      summary: Actualizar un product a partir del ID
      tags:
        - Products
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del producto que se busca
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateProduct'
      responses:
        200:
          description: Producto modificado exitosamente
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Success'

    delete:
      summary: Eliminar un producto a partir del ID
      tags:
        - Products
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del producto que se desea eliminar
          schema:
            $type: String
      responses:
        200:
          description: El producto se eliminó correctamente.
        400:
          description: Se produjo un error en la solicitud.
        500:
          description: No se encontró el producto.

components:
  schemas:
    Success:
      type: object
      properties:
        status:
          type: String
          description: success or error
        message:
          type: String
          description: aclarando que ocurrio
      example:
        status: success
        message: Product updated
    Products:
      type: object
      properties:
      owner:
          type: string
          description: Propietario del producto
        _id:
          type: string
          description: Identificador único del producto
        title:
          type: string
          description: Título del producto
        description:
          type: string
          description: Descripción del producto
        price:
          type: number
          description: Precio del producto
        thumbnail:
          type: string
          description: URL de la imagen del producto
        code:
          type: string
          description: Código único del producto
        stock:
          type: integer
          description: Cantidad en stock del producto
        category:
          type: string
          description: Categoría del producto
        status:
          type: boolean
          description: Estado del producto
        __v:
          type: integer
          description: Versión del documento
      example:
        status: success
        msg: listado de productos
        payload:
          docs:
            - owner: admin
              _id: ObjectId("644081a93f0625dc193bc594")
              title: Sorrentinos de ricotta y nuez
              description: Relleno de ricotta condimentada (sal, pimienta) y nuez
              price: 1000
              thumbnail: []
              code: SRN01
              stock: 20
              category: Pasta
              status: true
              ___v: 0
              owner: admin
              _id: '649248f2d4ee13a5f64e62dd'
              title: Sorrentinos de salmón
              description: Salmon fueguino cocido al horno, cebolla de verdeo, sal, pimienta.
              price: 2500
              thumbnail: image.jpg
              code: SDS01
              stock:  10
              category: Pasta
              status: true
          totalDocs: 28
          limit: 5
          totalPages: 6
          page: 1
          pagingCounter: 1
          hasPrevPage: false
          hasNextPage: true
          prevPage: null
          nextPage: 2
          prevLink: null
          nextLink: '/api/products?page=2'
  requestBodies:
    updateProduct:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID auto generado by mongo
        title:
          type: String
          description: Titulo del producto
        description:
          type: String
          description: Descripción del producto
        price:
          type: Number
          description: Precio del producto
        thumbnail:
          type: String
          description: url de la imágen
        code:
          type: String
          description: codigo único del producto
        stock:
          type: Number
          description: stock del producto
        category:
          type: String
          description: categoria del producto
        status:
          type: Boolean
          description: estado del producto
      example:
        _id: ObjectId("644081a93f0625dc193bc594")
        title: Sorrentinos de ricotta y nuez
        description: Relleno de ricotta condimentada (sal, pimienta) y nuez
        price: 1000
        thumbnail: []
        code: SRN01
        stock: 20
        category: Pasta
        status: true